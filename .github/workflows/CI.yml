name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    tags: ["v*"]
  release:
    types: [published]

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: &python-versions ["3.11", "3.12", "3.13", "3.14"]
        target: [x86_64, universal2-apple-darwin]
    steps:
      - &checkout-step
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ github.token }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: "Build wheels - macOS"
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release -i python${{ matrix.python-version }} --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}-${{ matrix.python-version }}
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: *python-versions
        platform:
          - target: x86_64-pc-windows-msvc
            arch: x64
          - target: aarch64-pc-windows-msvc
            arch: x64
    steps:
      - *checkout-step
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.platform.arch }}
      - name: "Build wheels - Windows"
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release -i python${{ matrix.python-version }} --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.python-version }}-${{ matrix.platform.target }}
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: *python-versions
        platform:
          - target: x86_64-unknown-linux-gnu
          - target: i686-unknown-linux-gnu
          - target: aarch64-unknown-linux-gnu
            maturin_docker_options: -e JEMALLOC_SYS_WITH_LG_PAGE=16
          - target: armv7-unknown-linux-gnueabihf
          - target: s390x-unknown-linux-gnu
          - target: powerpc64le-unknown-linux-gnu
          - target: powerpc64-unknown-linux-gnu
    steps:
      - *checkout-step
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: "Build wheels - Linux"
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          docker-options: ${{ matrix.platform.maturin_docker_options }}
          args: --release -i python${{ matrix.python-version }} -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.python-version }}-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: *python-versions
        platform:
          - target: x86_64-unknown-linux-musl
          - target: i686-unknown-linux-musl
          - target: aarch64-unknown-linux-musl
            maturin_docker_options: -e JEMALLOC_SYS_WITH_LG_PAGE=16
          - target: armv7-unknown-linux-musleabihf
    steps:
      - *checkout-step
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: "Build wheels - musllinux"
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          docker-options: ${{ matrix.platform.maturin_docker_options }}
          args: --release -i python${{ matrix.python-version }} -o dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.python-version }}-${{ matrix.platform.target }}
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs:
      - macos
      - windows
      - linux
      - musllinux
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) || github.event_name == 'release'
    steps:
      - name: "Install uv"
        uses: astral-sh/setup-uv@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: wheels
          merge-multiple: true
      - name: Publish to PyPi
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: uv publish -v wheels/*
