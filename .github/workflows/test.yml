name: Tests

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.x"]

    name: pytest ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up CPython ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install uv
          uv venv
          source ./.venv/bin/activate
          uv pip install --upgrade setuptools wheel pytest setuptools-rust
          uv pip install -U -r requirements_dev.txt
      - name: Installing distribution (dev mode)
        # this adds the .so to the inner lib files so we can test
        run: |
          source ./.venv/bin/activate
          python ./setup.py develop
      - name: Run tests
        shell: bash
        run: |
          source ./.venv/bin/activate
          PYTHONPATH="$(pwd)" pytest

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up CPython 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install uv
          uv venv
          source ./.venv/bin/activate
          uv pip install --upgrade setuptools wheel pytest setuptools-rust
          uv pip install -U -r requirements_dev.txt
      - name: Installing distribution (dev mode)
        # this adds the .so to the inner lib files so we can test
        run: |
          source ./.venv/bin/activate
          python ./setup.py develop
      - name: Run tests
        shell: bash
        run: |
          source ./.venv/bin/activate
          PYTHONPATH="$(pwd)" coverage run -m pytest

      - name: Coverage comment
        id: coverage_comment
        if: github.event.workflow_run.event == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
